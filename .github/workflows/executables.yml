name: Compile into Executables

on:
  release:
    types: [published]
  workflow_dispatch:

######################################################################################
# Based off of :
# https://github.com/mondul/HiyaCFW-Helper/blob/master/.github/workflows/make-dist.yml
# Thanks to Epicpkmn11 for helping with this
######################################################################################

jobs:
  windows:
    runs-on: windows-latest
    name: Windows
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8.x"
      - name: Install cx_Freeze
        run: py -m pip install cx_Freeze
      - name: Get tag
        id: vars
        shell: bash
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Make binary
        run: |
          py cxfreeze_setup.py build
          mv dist/main.exe dist/lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Windows.exe
        shell: bash
      - name: Publish builds
        uses: actions/upload-artifact@v3
        with:
          path: dist
          name: windows

  python:
    runs-on: ubuntu-latest
    name: Python 3 build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Get tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Make zip
        run: |
          mkdir temporary
          cp -r certifi chardet idna requests urllib3 tkmacosx temporary/
          cp LICENSE main.py colour.py README.md temporary/
          cd temporary
          chmod +x main.py
          zip -r ../lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Python3.zip * 
      - name: Publish artifact
        uses: actions/upload-artifact@v3
        with:
          path: lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Python3.zip
          name: python

  
  macos:
    runs-on: macos-latest
    name: macOS
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
      - name: Install pyinstaller
        run: |
          pip3 install pyinstaller
      - name: Get tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Create executable
        run: |
          pyinstaller --onefile --add-data "colour.py:." --add-data "tkmacosx:tkmacosx" --add-data "certifi:certifi" --add-data "requests:requests" --add-data "urllib3:urllib3" --add-data "lazy.ico:." --add-data "chardet:chardet" --icon "lazy.ico" --console --name "lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS" main.py
          cd dist
          chmod +x lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS
          zip ../lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS.zip lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS
      - name: Publish artifact
        uses: actions/upload-artifact@v3
        with:
          path: lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS.zip
          name: macos

  publish:
    runs-on: ubuntu-latest
    name: Publish builds
    if: ${{ success() }}
    needs: [windows,python,macos]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Get tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: re-zip Windows
        run: |
          cd windows
          zip -r lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Windows.zip *
          cd ..
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows/lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Windows.zip
            macos/lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS.zip
            python/lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Python3.zip  
