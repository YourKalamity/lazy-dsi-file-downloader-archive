name: Compile into Executables

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:

  windows:
    runs-on: windows-latest
    name: Windows
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8.x"
      - name: Setup Virtual Environment
        run: |
          python -m venv env
          ./env/Scripts/Activate.ps1
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: Install cx_Freeze
        run: |
          python -m pip install cx_Freeze
      - name: Get tag
        id: vars
        shell: bash
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Make binary
        run: |
          python cx_freeze_setup.py build
          mv dist/main.exe dist/lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Windows.exe
      - name: Publish builds
        uses: actions/upload-artifact@v3
        with:
          path: dist
          name: windows

  python:
    runs-on: ubuntu-latest
    name: Python 3 build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Make zip
        run: |
          mkdir temporary
          cp -r Darwin Linux temporary/
          cp gui.ui lazy.ico LICENSE main.py README.md resources.py resources.qrc requirements.txt temporary/
          cd temporary
          chmod +x main.py
          zip -r ../lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Python3.zip *

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          path: lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Python3.zip
          name: python


  macos:
    runs-on: macos-latest
    name: macOS
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Setup Virtual Environment
        run: |
          python -m venv env
          source env/bin/activate

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Install pyinstaller
        run: |
          python -m pip install pyinstaller

      - name: Get tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Create executable
        run: |

          pyinstaller --onefile --paths .\env\Lib\site-packages\ --add-data "gui.ui:." --add-data "lazy.ico:." --add-data "resources.qrc:." --add-data ".\env/Lib/site-packages/PySide6/plugins:PySide6/plugins/" --add-data ".\env/Lib/site-packages/PySide6/qml:PySide6/qml/"  --console --name "lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS" main.py
          cd dist
          chmod +x lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS
          zip ../lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS.zip lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          path: lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS.zip
          name: macos

  publish:
    runs-on: ubuntu-latest
    name: Publish builds
    if: ${{ success() }}
    needs: [windows,python,macos]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows/lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Windows.zip
            macos/lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-macOS.zip
            python/lazy-dsi-file-downloader-${{ steps.vars.outputs.tag }}-Python3.zip 
